@page "{id:int}"
@model DetailsModel
@{
    ViewData["Title"] = "Work Order Details";
    /* 
       Read-only display of a single work order. Loaded in OnGetAsync(id).
       Simple definition list for clarity. Could be extended with history or comments.
    */
}
<h1>Work Order Details</h1>
<hr />

@if (Model.WorkOrder is null)
{
    <div class="alert alert-warning">Not found.</div>
}
else
{
    <dl class="row"> @* Definition list maps labels to values *@
        <dt class="col-sm-3">Title</dt>
        <dd class="col-sm-9">@Model.WorkOrder.Title</dd>

        <dt class="col-sm-3">Description</dt>
        <dd class="col-sm-9">@Model.WorkOrder.Description</dd>

        <dt class="col-sm-3">Department</dt>
        <dd class="col-sm-9">@Model.WorkOrder.Department</dd>

        <dt class="col-sm-3">Priority</dt>
        <dd class="col-sm-9">@Model.WorkOrder.Priority</dd>

        <dt class="col-sm-3">Status</dt>
        <dd class="col-sm-9">@Model.WorkOrder.Status</dd>

        <dt class="col-sm-3">Requested By</dt>
        <dd class="col-sm-9">@Model.WorkOrder.RequestedBy</dd>

        <dt class="col-sm-3">Created</dt>
        <dd class="col-sm-9">@Model.WorkOrder.CreatedAt.ToLocalTime()</dd>

        <dt class="col-sm-3">Updated</dt>
        <dd class="col-sm-9">@Model.WorkOrder.UpdatedAt.ToLocalTime()</dd>
    </dl>

    <a class="btn btn-outline-primary" asp-page="Edit" asp-route-id="@Model.WorkOrder.Id">Edit</a>
    <a class="btn btn-outline-secondary ms-2" asp-page="Index">Back</a>
}
